---
#
#      Copyright (c) 2016 F5 Networks
#      All rights reserved.
#
#      author: Mark Lowcher F5 Networks
#      description: This playbook will enable the application Connector
#      service center. 
#      The steps are as follows:
#      - Verify that the target F5 device is running v13 or greater
#      - Verify that the F5 device is licensed for App Connector.
#      - Provision all desired modules including iRulesLX. This playbook will
#        provision iRulesLX if you are running Ansible 2.4. 
#      - This playbook will enable App Connector.
#        NOTICE: Be sure you have staged the files in the ~/ansible/playbooks/files
#        directory as described in the "Ansible Orchestration for Application
#        Connector deployment guide located at https://github.com/mlowcher61
#      - After running this playbook perform the manual steps described in the 
#        deployment guide prior to running the appconnector_vips playbook. 

- name: Configuring App Connecter service center
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    server1: "54.218.80.234"
    setup_user: "admin"
    setup_pass: "admin"
    app_connector: "app-connector-1.1.1-8.0.noarch.rpm"
  tasks:
 
   - name: Enabling App Connector
     bigip_command:
         commands: run /util bash -c 'touch /var/config/rest/iapps/enable'
         server: "{{ server1 }}"
         password: "{{ setup_pass }}"
         user: "{{ setup_user }}"
         validate_certs: "no"
     delegate_to: localhost

   - name: Provision BIG-IP with the irulesLX module
     bigip_provision:
       server: "{{ server1 }}"
       user: "{{ setup_user }}"
       password: "{{ setup_pass }}"
       validate_certs: False
       module: ilx
       level: nominal
       state: present
#     tags: provision
     delegate_to: localhost

   - name: Waiting 30 seconds for provisioning to finish 
     wait_for:
       timeout: 30

   - name: Add an iAppLX package
     bigip_iapplx_package:
         package: "{{app_connector}}"
         password: "{{setup_pass}}"
         server: "{{ server1 }}"
         state: present
         user: "{{setup_user}}"
         validate_certs: "no"
     delegate_to: localhost
